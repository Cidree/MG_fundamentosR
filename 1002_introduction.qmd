---
execute: 
  echo: false
output: html_document
editor_options: 
  chunk_output_type: console
---

```{r packages}
#| include: false
library(duckdb)
library(tidyverse)
```

# Introducción a la visualización de datos

Desde nuestra época escolar, hemos estado expuestos a una gran variedad de gráficos. En la actualidad, cualquiera puede crear un gráfico utilizando herramientas comunes como Excel. Sin embargo, existe una gran diferencia entre hacer un gráfico y hacer un buen gráfico. La mayoría de las personas pueden generar gráficos, pero pocos son capaces de diseñar visualizaciones que realmente expliquen los datos y transmitan el mensaje deseado al público objetivo.

En el mundo actual, los datos son abundantes y la necesidad de comunicarlos de manera efectiva es crucial. Una buena visualización no solo presenta datos, sino que también cuenta una historia, resalta patrones importantes y facilita la comprensión de información compleja. Aquí es donde entra en juego `{ggplot2}`, una poderosa herramienta de visualización de datos en R que nos permite crear gráficos claros, informativos y estéticamente agradables. No obstante, antes de sumergirnos en los detalles de `{ggplot2}`, es importante entender la importancia de la visualización de datos y algunos de los principios básicos que la rigen.

## Objetivos

-   Entender la necesidad de comunicar nuestros datos de una forma clara

-   Aprender algunos de los principios de la visualización de datos

-   Aprender a elegir el gráfico adecuado para nuestros datos y nuestros objetivos

-   Entender la gramática de gráficos y su implicación dentro de `{ggplot2}`

-   Crear gráficos sencillos pero comunicativos con `{ggplot2}`

## Ejemplos de visualización de datos

Antes de comenzar, vamos a ver una serie de ejemplos de visualizaciones de datos que nos ayudarán a entender la importancia de la visualización de datos y cómo puede ayudarnos a entender mejor la información que nos rodea.

### Artículos científicos

Los artículos científicos son una fuente importante de información para la comunidad científica. En ellos, los autores presentan sus resultados y conclusiones, y utilizan gráficos para ilustrar sus hallazgos. A continuación, se muestra un ejemplo de un gráfico extraído de un artículo científico:

![Gráfico de barras con barras de error extraído de @modesto2021](images/example-bar-article.png){#fig-ejemplo-articulo-cientifico fig-align="center"}

### Periódicos

Los periódicos son una fuente de información para el público en general. En ellos, los periodistas utilizan gráficos para ilustrar noticias y tendencias. A continuación, se muestra un ejemplo de un gráfico extraído de un [periódico](https://elpais.com/economia/2017/11/14/actualidad/1510661591_352717.html "Visitar artículo"):

![Visualización del periódico El País](images/example-bar-newspaper.png){#fig-example-bar-newspaper fig-align="center"}

En la @fig-example-bar-newspaper tenemos dos tipos de figuras que seguramente todos hemos visto. Dirías que la forma de representar estos datos es adecuada?

Puede que inicialmente sea complejo de ver, pero si te fijas, aunque los dos gráficos parecen de barras con la misma estructura, verás que el superior es un gráfico de barras donde ambas barras empiezan en 0, mientras que el inferior es otro gráfico de barras donde las barras se acumulan, de forma que el final de una barra es el inicio de la siguiente. Esto trae una serie de implicaciones en la interpretación de los datos, ya que en el primer caso se pueden comparar las barras directamente, mientras que en el segundo caso, aunque se pueden comparar las barras, es más complicado ver la diferencia entre ellas. Sabrías decirme si la producción de petróleo de esquisto será mayor en 2025 o en 2040? La producción de gas de esquisto de 2040, cuánto de mayor es que la de 2010? Cinco veces mayor, siete veces mayor?

### Aplicaciones

Hoy en día existen muchas aplicaciones que utilizan gráficos para presentar información a los usuarios, como pueden ser aplicaciones bancarias, de salud o de deportes. El siguiente ejemplo muestra la aplicación de [Huawei Health](https://consumer.huawei.com/es/mobileservices/health/):

![Visualización de la aplicación [Huawei Health](https://consumer.huawei.com/es/mobileservices/health/ "Visitar aquí")](images/example-app-huawei.jpg){#fig-example-app-huawei fig-align="center" width="404"}

Aquí podemos ver un gráfico de barras donde se representan las kcal quemadas por el usuario cada día de la útlima semana. A continuación, se muestran unos indicadores del total de kcal quemadas en la última semana y la media semanal, ya que son valores que usualmente consultamos. Finalmente, se muestra un gráfico de barras apilado con el tipo de actividad que ha consumido las kcal anteriores. Además, nos permite consultar las mismas estadísticas por día, mes y año.

### Facturas

Si revisas tus facturas, verás que muchas de ellas incluyen gráficos para ilustrar tus gastos o consumos. A continuación, se muestra un ejemplo de una factura de [Naturgy](https://www.naturgy.es/ "Visitar aquí"):

![Visualización de la factura de [Naturgy](https://www.naturgy.es/ "Visitar aquí")](images/example-bill.jpg){#fig-example-bill-naturgy fig-align="center"}

Aquí podemos ver dos gráficos. Una gráfico de barras apilado y un gráfico circular. Como veréis en la lección de buenas prácticas, estos dos gráficos no se deben utilizar nunca.

```{r cargar_datos}
## Connect
conn <- dbConnect(
    duckdb(), "data/red_seda.duckdb"
)
## Load data
puntos_tbl <- dbGetQuery(conn, "SELECT * FROM ADMON_PUNTO") |> 
    as_tibble()
agent_tbl <- dbGetQuery(conn, "SELECT * FROM AGENT_ARBOL") |> 
    as_tibble()
dic_agent_tbl <- dbGetQuery(conn, "SELECT * FROM DIC_AGENTES") |> 
    as_tibble()
arbol_tbl <- dbGetQuery(conn, "SELECT * FROM ARBOL_BASE") |> 
    as_tibble()
dic_prov <- dbGetQuery(conn, "SELECT * FROM DIC_PROV") |> 
    as_tibble()
## Unir
agent_filtered_tbl <- agent_tbl |> 
    left_join(arbol_tbl) |> 
    left_join(puntos_tbl) |> 
    left_join(dic_agent_tbl) |> 
    left_join(dic_prov) |> 
    select(ID_ARBOL, CAMP, NOMB, PROV) |> 
    filter(PROV %in% c("CORDOBA", "SEVILLA", "HUELVA")) |> 
    filter(NOMB %in% c("Cerambyx sp."))
## Contar
agent_filtered_tbl <- agent_filtered_tbl |> 
    count(CAMP, NOMB, PROV) |> 
    mutate(
        across(CAMP:PROV, as.factor)
    )
## Desconectar de la base de datos
dbDisconnect(conn, shutdown = TRUE)
```

```{r}
agent_filtered_tbl |> 
    ggplot(
        aes(x = CAMP, y = n, fill = PROV)
    ) +
    geom_col(position = position_dodge()) +
    geom_text(
        aes(label = n), 
        position = position_dodge(width = .9),
        vjust    = -.5
    ) +
    labs(
        x     = "Año", 
        y     = "Total",
        title = "Detecciones de Cerambyx sp.",
        fill  = "Provincia"
    ) +
    theme_bw() +
    theme(
        legend.position = "bottom"
    )
```

```{r}
agent_filtered_tbl |> 
    ggplot(
        aes(x = CAMP, y = n, color = PROV, group = PROV)
    ) +
    geom_line() +
    labs(
        x     = NULL, 
        y     = "Total",
        title = "Detecciones de Cerambyx sp.",
        fill  = "Provincia"
    ) +
    theme_bw() +
    theme(
        legend.position = "bottom"
    )
```

{{< include chapters/references.qmd >}}
